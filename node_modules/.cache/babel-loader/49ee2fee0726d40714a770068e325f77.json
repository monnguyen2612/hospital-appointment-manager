{"ast":null,"code":"var _jsxFileName = \"/Users/capt4inmon/Documents/hospital-management-system-fe/src/components/Navbars/DemoNavbar.jsx\";\nimport React from \"react\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Container } from \"reactstrap\";\nimport { routes } from \"routes.js\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLogout = () => {\n      localStorage.removeItem('authToken');\n      window.location.replace('/');\n    };\n\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.sidebarToggle = React.createRef();\n  }\n\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  getBrand() {\n    let brandName = \"HMS\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path.replace(':pageNo', 1)) !== -1) {\n        brandName = prop.name;\n      }\n\n      return null;\n    });\n    return brandName;\n  }\n\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  } // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n\n\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n\n  componentDidUpdate(e) {\n    if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // add or remove classes depending if we are on full-screen-maps page or not\n      React.createElement(Navbar, {\n        color: this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"dark\" : this.state.color,\n        expand: \"lg\",\n        className: this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar-toggle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        ref: this.sidebarToggle,\n        className: \"navbar-toggler\",\n        onClick: () => this.openSidebar(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(NavbarBrand, {\n        href: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, this.getBrand())), /*#__PURE__*/React.createElement(NavbarToggler, {\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        className: \"justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        navbar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        nav: true,\n        isOpen: this.state.dropdownOpen,\n        toggle: e => this.dropdownToggle(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        caret: true,\n        nav: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"nc-icon nc-circle-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-lg-none d-md-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, \"Some Actions\"))), /*#__PURE__*/React.createElement(DropdownMenu, {\n        right: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        onClick: this.handleLogout,\n        tag: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, \"Logout\")))))))\n    );\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/capt4inmon/Documents/hospital-management-system-fe/src/components/Navbars/DemoNavbar.jsx"],"names":["React","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Container","routes","Header","Component","constructor","props","handleLogout","localStorage","removeItem","window","location","replace","state","isOpen","dropdownOpen","color","toggle","bind","dropdownToggle","sidebarToggle","createRef","setState","e","getBrand","brandName","map","prop","key","href","indexOf","layout","path","name","openSidebar","document","documentElement","classList","current","updateColor","innerWidth","componentDidMount","addEventListener","componentDidUpdate","history","pathname","className","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n} from \"reactstrap\";\n\nimport {routes} from \"routes.js\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.sidebarToggle = React.createRef();\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem('authToken');\n    window.location.replace('/');\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    let brandName = \"HMS\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path.replace(':pageNo',1)) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref={this.sidebarToggle}\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            <Nav navbar>\n              <Dropdown nav\n                isOpen={this.state.dropdownOpen}\n                toggle={e => this.dropdownToggle(e)}\n              >\n                <DropdownToggle caret nav>\n                  <i className=\"nc-icon nc-circle-10\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                  </p>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem onClick={this.handleLogout} tag=\"a\">Logout</DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}