{"ast":null,"code":"var _jsxFileName = \"/Users/capt4inmon/Documents/hospital-management-system-fe/src/views/doctor/MyPrescriptions.js\";\nimport React from 'react';\nimport { Row, Col, Table, Card, CardBody, Button, Spinner } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getMyPrescription, deletePrescription } from '../../services/doctor.services';\nimport { getMyPrescriptions } from '../../redux/actions/doctor.action';\nimport ImageView from '../../components/modals/ImageView';\n\nfunction MyPrescriptions(props) {\n  React.useEffect(() => {\n    getMyPrescription().then(response => {\n      console.log(response);\n      props.setPrescriptions(response);\n    }).catch(e => console.log(e)); // console.log('hello');\n    // props.setPrescriptions('hjhv');\n  }, []);\n\n  const deletePrescriptionButtonHandler = prescriptionId => {\n    deletePrescription(prescriptionId).then(_ => props.history.replace(props.location.pathname)).catch(e => console.log(e));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'content',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, props.prescriptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: 'd-flex w-100 bg-transparent justify-content-center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: 'lg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 33\n    }\n  })) : /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 49\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 49\n    }\n  }, \"L\\u1EDDi ch\\xFA\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 49\n    }\n  }, \"H\\xECnh \\u1EA3nh\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 49\n    }\n  }, \"B\\u1EC7nh nh\\xE2n\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 49\n    }\n  }, \"X\\xF3a\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 41\n    }\n  }, props.prescriptions.map((prescription, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 49\n    }\n  }, console.log(prescription), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 53\n    }\n  }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 53\n    }\n  }, prescription.comment), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(ImageView, {\n    imageUrl: prescription.image_url,\n    prescription: prescription.prescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 53\n    }\n  }, prescription.full_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => deletePrescriptionButtonHandler(prescription.id),\n    outline: true,\n    color: 'danger',\n    size: 'sm',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 57\n    }\n  }, \"X\\xF3a\")))))))))));\n}\n\nconst mapStateToProps = state => ({\n  prescriptions: state.doctorReducer.prescriptions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setPrescriptions: prescriptions => dispatch(getMyPrescriptions(prescriptions))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPrescriptions);","map":{"version":3,"sources":["/Users/capt4inmon/Documents/hospital-management-system-fe/src/views/doctor/MyPrescriptions.js"],"names":["React","Row","Col","Table","Card","CardBody","Button","Spinner","connect","getMyPrescription","deletePrescription","getMyPrescriptions","ImageView","MyPrescriptions","props","useEffect","then","response","console","log","setPrescriptions","catch","e","deletePrescriptionButtonHandler","prescriptionId","_","history","replace","location","pathname","prescriptions","length","map","prescription","index","comment","image_url","full_name","id","mapStateToProps","state","doctorReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Row, Col, Table, Card, CardBody, Button, Spinner } from 'reactstrap'\nimport { connect } from 'react-redux';\nimport { getMyPrescription , deletePrescription } from '../../services/doctor.services';\nimport { getMyPrescriptions } from '../../redux/actions/doctor.action';\nimport ImageView from '../../components/modals/ImageView';\nfunction MyPrescriptions(props) {\n    React.useEffect(() => {\n        getMyPrescription().then(response => {\n            console.log(response);\n            props.setPrescriptions(response);\n        }).catch(e => console.log(e));\n        // console.log('hello');\n        // props.setPrescriptions('hjhv');\n    }, []);\n    const deletePrescriptionButtonHandler = (prescriptionId) => {\n        deletePrescription(prescriptionId).then(_ => props.history.replace(props.location.pathname)).catch(e => console.log(e));\n    }\n    return (\n        <div className={'content'}>\n            <Row>\n                <Col md={12}>\n                    {\n                        props.prescriptions.length === 0 ?\n                            <div className={'d-flex w-100 bg-transparent justify-content-center'}>\n                                <Spinner size={'lg'} />\n                            </div>\n                            :\n                            <Card>\n                                <CardBody>\n                                    <Table responsive bordered hover>\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Lời chú</th>\n                                                <th>Hình ảnh</th>\n                                                <th>Bệnh nhân</th>\n                                                <th>Xóa</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {props.prescriptions.map((prescription, index) => (\n                                                <tr key={index}>\n                                                    {console.log(prescription)}\n                                                    <td>{index + 1}</td>\n                                                    <td>\n                                                        {prescription.comment}\n                                                    </td>\n                                                    <td>\n                                                        <ImageView imageUrl={prescription.image_url} prescription={prescription.prescription}/>\n                                                    </td>\n                                                    <td>\n                                                        {prescription.full_name}\n                                                    </td>\n                                                    <td>\n                                                        <Button onClick={() => deletePrescriptionButtonHandler(prescription.id)} outline color={'danger'} size={'sm'}>Xóa</Button>\n                                                    </td>\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </Table>\n                                </CardBody>\n                            </Card>\n                    }\n                </Col>\n            </Row>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n   prescriptions : state.doctorReducer.prescriptions \n});\nconst mapDispatchToProps = dispatch => ({\n    setPrescriptions: prescriptions => dispatch(getMyPrescriptions(prescriptions))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MyPrescriptions);"]},"metadata":{},"sourceType":"module"}