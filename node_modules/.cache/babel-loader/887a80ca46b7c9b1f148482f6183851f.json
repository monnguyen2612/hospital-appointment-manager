{"ast":null,"code":"import _regeneratorRuntime from \"/Users/capt4inmon/Documents/hospital-management-system-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/capt4inmon/Documents/hospital-management-system-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BASE_URL } from \"variables/values\";\nimport axios from 'axios';\nexport function getAllDoctors(_x) {\n  return _getAllDoctors.apply(this, arguments);\n}\n\nfunction _getAllDoctors() {\n  _getAllDoctors = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pageNo) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", fetch(\"\".concat(BASE_URL, \"admin/all-doctors/\").concat(pageNo), {\n            method: 'GET',\n            headers: {\n              'Authorization': \"Bearer \".concat(localStorage.getItem('authToken')),\n              'Accept': 'application/json'\n            }\n          }).then(response => {\n            if (response.ok) {\n              return response.json();\n            } else throw new Error('Some Thing Went Wrong');\n          }).catch(e => console.log(e)));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getAllDoctors.apply(this, arguments);\n}\n\nexport function addDoctor(_x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n  return _addDoctor.apply(this, arguments);\n}\n\nfunction _addDoctor() {\n  _addDoctor = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(fullName, email, address, specialities, gender, regNumber, telNumber) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", fetch(\"\".concat(BASE_URL, \"admin/add-new-doctor\"), {\n            method: 'POST',\n            body: JSON.stringify({\n              email: email,\n              role: 2,\n              fullName: fullName,\n              telNumber: telNumber,\n              gender: gender,\n              specialities: specialities,\n              regNumber: regNumber,\n              address: address\n            }),\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json',\n              'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n            }\n          }).then(response => {\n            if (response.ok) return response.json();else if (response.status === 401) {\n              localStorage.removeItem('authToken');\n              throw new Error('Unauthorized User');\n            } else if (response.status === 409) {\n              throw new Error('This User Exists');\n            } else throw new Error('Something Went Wrong');\n          }).catch(err => {\n            throw err;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _addDoctor.apply(this, arguments);\n}\n\nexport function deleteUser(_x9, _x10) {\n  return _deleteUser.apply(this, arguments);\n}\n\nfunction _deleteUser() {\n  _deleteUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id, role) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", fetch(\"\".concat(BASE_URL, \"admin/delete/\").concat(role, \"/\").concat(id), {\n            method: 'DELETE',\n            headers: {\n              'Accept': 'application/json',\n              'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n            }\n          }).then(response => {\n            if (response.ok) return response.json();else if (response.status === 401) {\n              localStorage.removeItem('authToken');\n              throw new Error('Unauthorized User');\n            } else throw new Error('Something Went Wrong');\n          }).catch(e => {\n            throw e;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _deleteUser.apply(this, arguments);\n}\n\nexport function getPagesCount() {\n  return _getPagesCount.apply(this, arguments);\n}\n\nfunction _getPagesCount() {\n  _getPagesCount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", fetch(\"\".concat(BASE_URL), {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n            }\n          }).then(response => {\n            if (response.ok) return response.json();else if (response.status === 401) {\n              localStorage.removeItem('authToken');\n              throw new Error('Unauthorized User');\n            } else if (response.status === 409) {\n              throw new Error('This User Exists');\n            } else throw new Error('Something Went Wrong');\n          }).catch(err => {\n            throw err;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return _getPagesCount.apply(this, arguments);\n}\n\nexport function getAllPatients(_x11) {\n  return _getAllPatients.apply(this, arguments);\n}\n\nfunction _getAllPatients() {\n  _getAllPatients = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(pageNo) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", fetch(\"\".concat(BASE_URL, \"admin/get-all-patients/\").concat(pageNo), {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n              'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n            }\n          }).then(response => {\n            if (response.ok) return response.json();else if (response.status === 401) throw new Error('Unauthorized');else throw new Error('Something Went Wrong');\n          }).catch(e => {\n            throw e;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5);\n  }));\n  return _getAllPatients.apply(this, arguments);\n}\n\nexport function addNewPatient(_x12) {\n  return _addNewPatient.apply(this, arguments);\n}\n\nfunction _addNewPatient() {\n  _addNewPatient = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(patient) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          return _context6.abrupt(\"return\", fetch(\"\".concat(BASE_URL, \"admin/add-new-patient\"), {\n            method: 'POST',\n            body: JSON.stringify({\n              fullName: patient.fullName,\n              role: 3,\n              nic: patient.nic,\n              email: patient.email,\n              gender: patient.gender,\n              dob: patient.dob,\n              telNumber: patient.telNumber,\n              address: patient.address\n            }),\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json',\n              'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n            }\n          }).then(response => {\n            if (response.ok) return response.json();else if (response.status === 401) throw new Error('UNAUTHORIZED');else if (response.status === 409) throw new Error('This Email Exists');else if (response.status === 400) throw new Error('Please Check All Fileds');else throw new Error('Something Went Wrong');\n          }).catch(e => {\n            throw e;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _addNewPatient.apply(this, arguments);\n}\n\nexport function fetchAllPharmacists(_x13) {\n  return _fetchAllPharmacists.apply(this, arguments);\n}\n\nfunction _fetchAllPharmacists() {\n  _fetchAllPharmacists = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(pageNo) {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          return _context7.abrupt(\"return\", fetch(\"\".concat(BASE_URL, \"admin/all-pharmacists/\").concat(pageNo), {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n              'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n            }\n          }).then(response => {\n            if (response.ok) return response.json();else if (response.status === 401) {\n              localStorage.removeItem('authToken');\n              throw new Error('Unauthorized User');\n            } else throw new Error('Something Went Wrong');\n          }).catch(e => {\n            throw e;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return _fetchAllPharmacists.apply(this, arguments);\n}\n\nexport function addNewPharmacist(_x14) {\n  return _addNewPharmacist.apply(this, arguments);\n}\n\nfunction _addNewPharmacist() {\n  _addNewPharmacist = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(pharmacist) {\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          return _context8.abrupt(\"return\", fetch(\"\".concat(BASE_URL, \"admin/add-new-pharmacist\"), {\n            method: 'POST',\n            body: JSON.stringify({\n              fullName: pharmacist.fullName,\n              role: 4,\n              email: pharmacist.email,\n              gender: pharmacist.gender,\n              dob: pharmacist.dob,\n              telNumber: pharmacist.telNumber,\n              address: pharmacist.address\n            }),\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json',\n              'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n            }\n          }).then(response => {\n            if (response.ok) return response.json();else if (response.status === 401) throw new Error('UNAUTHORIZED');else if (response.status === 409) throw new Error('This Email Exists');else if (response.status === 400) throw new Error('Please Check All Fileds');else throw new Error('Something Went Wrong');\n          }).catch(e => {\n            throw e;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return _addNewPharmacist.apply(this, arguments);\n}\n\nexport function getAllStaffMembers(_x15) {\n  return _getAllStaffMembers.apply(this, arguments);\n}\n\nfunction _getAllStaffMembers() {\n  _getAllStaffMembers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(pageNo) {\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          return _context9.abrupt(\"return\", fetch(\"\".concat(BASE_URL, \"admin/get-staff-members/\").concat(pageNo), {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n              'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n            }\n          }).then(response => {\n            if (response.ok) return response.json();else if (response.status === 401) {\n              localStorage.removeItem('authToken');\n              throw new Error('Unauthorized User');\n            } else throw new Error('Something Went Wrong');\n          }).catch(e => {\n            throw e;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return _getAllStaffMembers.apply(this, arguments);\n}\n\nexport function addNewStaffMember(_x16) {\n  return _addNewStaffMember.apply(this, arguments);\n}\n\nfunction _addNewStaffMember() {\n  _addNewStaffMember = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(staffMember) {\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          return _context10.abrupt(\"return\", fetch(\"\".concat(BASE_URL, \"admin/add-new-staff-member\"), {\n            method: 'POST',\n            body: JSON.stringify({\n              fullName: staffMember.fullName,\n              role: 5,\n              email: staffMember.email,\n              gender: staffMember.gender,\n              dob: staffMember.dob,\n              telNumber: staffMember.telNumber,\n              address: staffMember.address,\n              jobRole: staffMember.jobRole\n            }),\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json',\n              'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n            }\n          }).then(response => {\n            if (response.ok) return response.json();else if (response.status === 401) throw new Error('UNAUTHORIZED');else if (response.status === 409) throw new Error('This Email Exists');else if (response.status === 400) throw new Error('Please Check All Fileds');else throw new Error('Something Went Wrong');\n          }).catch(e => {\n            throw e;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return _addNewStaffMember.apply(this, arguments);\n}\n\nexport function getById(role, id) {\n  return axios.get(\"\".concat(BASE_URL, \"admin/get-role-and-id/\").concat(role, \"/\").concat(id), {\n    headers: {\n      'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n    }\n  }).then(response => response.data).catch(e => {\n    throw e;\n  });\n}\nexport function updateDoctor(doctor) {\n  return axios.patch(\"\".concat(BASE_URL, \"admin/update-doctor\"), doctor, {\n    headers: {\n      'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n    }\n  }).then(response => response.data).catch(e => {\n    throw e;\n  });\n}\nexport function updatePatient(patient) {\n  return axios.patch(\"\".concat(BASE_URL, \"admin/update-patient\"), patient, {\n    headers: {\n      'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n    }\n  }).then(response => response.data).catch(e => {\n    throw e;\n  });\n}\nexport function updatePharmacist(pharmacist) {\n  return axios.patch(\"\".concat(BASE_URL, \"admin/update-pharmacist\"), pharmacist, {\n    headers: {\n      'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n    }\n  }).then(response => response.data).catch(err => {\n    throw err;\n  });\n}\nexport function updateStaffMember(staffMember) {\n  return axios.patch(\"\".concat(BASE_URL, \"admin/update-staff-member\"), staffMember, {\n    headers: {\n      'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n    }\n  }).then(response => response.data).catch(err => {\n    throw err;\n  });\n}","map":{"version":3,"sources":["/Users/capt4inmon/Documents/hospital-management-system-fe/src/services/admin.services.js"],"names":["BASE_URL","axios","getAllDoctors","pageNo","fetch","method","headers","localStorage","getItem","then","response","ok","json","Error","catch","e","console","log","addDoctor","fullName","email","address","specialities","gender","regNumber","telNumber","body","JSON","stringify","role","status","removeItem","err","deleteUser","id","getPagesCount","getAllPatients","addNewPatient","patient","nic","dob","fetchAllPharmacists","addNewPharmacist","pharmacist","getAllStaffMembers","addNewStaffMember","staffMember","jobRole","getById","get","data","updateDoctor","doctor","patch","updatePatient","updatePharmacist","updateStaffMember"],"mappings":"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","sourcesContent":["import { BASE_URL } from \"variables/values\";\nimport axios from 'axios';\nexport async function getAllDoctors(pageNo) {\n    return fetch(`${BASE_URL}admin/all-doctors/${pageNo}`, {\n        method: 'GET',\n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Accept': 'application/json'\n        }\n    }).then(response => {\n        if (response.ok) {\n            return response.json()\n        } else\n            throw new Error('Some Thing Went Wrong');\n    }).catch(e => console.log(e));\n}\n\nexport async function addDoctor(fullName, email, address, specialities , gender , regNumber , telNumber) {\n    return fetch(`${BASE_URL}admin/add-new-doctor`, {\n        method: 'POST',\n        body: JSON.stringify({\n            email: email,\n            role: 2,\n            fullName: fullName,\n            telNumber: telNumber,\n            gender: gender,\n            specialities: specialities,\n            regNumber: regNumber,\n            address: address\n        }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => {\n        if (response.ok)\n            return response.json();\n        else if (response.status === 401) {\n            localStorage.removeItem('authToken');\n            throw new Error('Unauthorized User');\n        } else if (response.status === 409) {\n            throw new Error('This User Exists');\n        } else\n            throw new Error('Something Went Wrong');\n    }).catch(err => { throw err });\n}\n\nexport async function deleteUser(id , role) {\n    return fetch(`${BASE_URL}admin/delete/${role}/${id}`, {\n        method: 'DELETE',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => {\n        if (response.ok)\n            return response.json();\n        else if (response.status === 401) {\n            localStorage.removeItem('authToken');\n            throw new Error('Unauthorized User');\n        } else\n            throw new Error('Something Went Wrong');\n    }).catch(e => { throw e });\n}\n\nexport async function getPagesCount() {\n    return fetch(`${BASE_URL}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => {\n        if (response.ok)\n            return response.json();\n        else if (response.status === 401) {\n            localStorage.removeItem('authToken');\n            throw new Error('Unauthorized User');\n        } else if (response.status === 409) {\n            throw new Error('This User Exists');\n        } else\n            throw new Error('Something Went Wrong');\n        \n    }).catch(err => { throw err });\n}\n\nexport async function getAllPatients(pageNo) {\n    return fetch(`${BASE_URL}admin/get-all-patients/${pageNo}`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization':`Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => {\n        if (response.ok)\n            return response.json();\n        else if (response.status === 401)\n            throw new Error('Unauthorized');\n        else\n            throw new Error('Something Went Wrong');\n    }).catch(e => {\n        throw e;\n    })\n}\n\nexport async function addNewPatient(patient) {\n    return fetch(`${BASE_URL}admin/add-new-patient`, {\n        method: 'POST',\n        body: JSON.stringify({\n            fullName: patient.fullName,\n            role: 3,\n            nic: patient.nic,\n            email: patient.email,\n            gender: patient.gender,\n            dob: patient.dob,\n            telNumber: patient.telNumber,\n            address : patient.address\n        }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization' : `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => {\n        if (response.ok)\n            return response.json();\n        else if (response.status === 401)\n            throw new Error('UNAUTHORIZED');\n        else if (response.status === 409)\n            throw new Error('This Email Exists');\n        else if (response.status === 400)\n            throw new Error('Please Check All Fileds');\n        else\n            throw new Error('Something Went Wrong');\n    }).catch(e => {\n        throw e;\n    })\n}\n\nexport async function fetchAllPharmacists(pageNo) {\n    return fetch(`${BASE_URL}admin/all-pharmacists/${pageNo}`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => {\n        if (response.ok)\n            return response.json();\n        else if (response.status === 401) {\n            localStorage.removeItem('authToken');\n            throw new Error('Unauthorized User');\n        }\n        else\n            throw new Error('Something Went Wrong');\n    }).catch(e => {\n        throw e;\n    });\n}\n\nexport async function addNewPharmacist(pharmacist) {\n    return fetch(`${BASE_URL}admin/add-new-pharmacist`, {\n        method: 'POST',\n        body: JSON.stringify({\n            fullName: pharmacist.fullName,\n            role: 4,\n            email: pharmacist.email,\n            gender: pharmacist.gender,\n            dob: pharmacist.dob,\n            telNumber: pharmacist.telNumber,\n            address: pharmacist.address\n        }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => {\n        if (response.ok)\n            return response.json();\n        else if (response.status === 401)\n            throw new Error('UNAUTHORIZED');\n        else if (response.status === 409)\n            throw new Error('This Email Exists');\n        else if (response.status === 400)\n            throw new Error('Please Check All Fileds');\n        else\n            throw new Error('Something Went Wrong');\n    }).catch(e => {\n        throw e;\n    })\n}\n\nexport async function getAllStaffMembers(pageNo) {\n    return fetch(`${BASE_URL}admin/get-staff-members/${pageNo}`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => {\n        if (response.ok)\n            return response.json();\n        else if (response.status === 401) {\n            localStorage.removeItem('authToken');\n            throw new Error('Unauthorized User');\n        } else\n            throw new Error('Something Went Wrong');\n    }).catch(e => {\n        throw e;\n    })\n}\n\nexport async function addNewStaffMember(staffMember) {\n    return fetch(`${BASE_URL}admin/add-new-staff-member`, {\n        method: 'POST',\n        body: JSON.stringify({\n            fullName: staffMember.fullName,\n            role: 5,\n            email: staffMember.email,\n            gender: staffMember.gender,\n            dob: staffMember.dob,\n            telNumber: staffMember.telNumber,\n            address: staffMember.address,\n            jobRole: staffMember.jobRole\n        }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => {\n        if (response.ok)\n            return response.json();\n        else if (response.status === 401)\n            throw new Error('UNAUTHORIZED');\n        else if (response.status === 409)\n            throw new Error('This Email Exists');\n        else if (response.status === 400)\n            throw new Error('Please Check All Fileds');\n        else\n            throw new Error('Something Went Wrong');\n    }).catch(e => {\n        throw e;\n    });\n}\nexport function getById(role, id) {\n    return axios.get(`${BASE_URL}admin/get-role-and-id/${role}/${id}`, {\n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => response.data).catch(e => {\n        throw e;\n    })\n}\n\nexport function updateDoctor(doctor) {\n    return axios.patch(`${BASE_URL}admin/update-doctor`, doctor, {\n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => response.data).catch(e => {\n        throw e;\n    });\n}\n\nexport function updatePatient(patient) {\n    return axios.patch(`${BASE_URL}admin/update-patient`, patient, {\n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => response.data).catch(e => { throw e });\n}\n\nexport function updatePharmacist(pharmacist) {\n    return axios.patch(`${BASE_URL}admin/update-pharmacist`, pharmacist, {\n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => response.data).catch(err => {\n        throw err\n    });\n}\n\nexport function updateStaffMember(staffMember) {\n    return axios.patch(`${BASE_URL}admin/update-staff-member`, staffMember, {\n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => response.data).catch(err => {\n        throw err\n    });\n}"]},"metadata":{},"sourceType":"module"}