{"ast":null,"code":"import _slicedToArray from \"/Users/capt4inmon/Documents/hospital-management-system-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/capt4inmon/Documents/hospital-management-system-fe/src/components/modals/UpdatePatient.js\";\nimport React from 'react';\nimport { Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, Spinner, Button } from 'reactstrap';\nimport { getById, updatePatient } from '../../services/admin.services';\nexport default function UpdatePatient({\n  id\n}) {\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        patient = _React$useState2[0],\n        setPatient = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1];\n\n  const toggle = () => setOpen(!open);\n\n  React.useEffect(() => {\n    getById(3, id).then(response => setPatient(response)).catch(e => console.log(e));\n  }, []);\n\n  const updateButtonHandler = () => {\n    let patient = {\n      id: id,\n      fullName: document.getElementById('fullName').value,\n      address: document.getElementById('address').value,\n      telNumber: document.getElementById('telNumber').value,\n      nic: document.getElementById('nic').value\n    };\n    updatePatient(patient).then(_ => window.location.reload()).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: toggle,\n    color: 'danger',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: open,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Update Patient\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, patient === null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: 'd-flex justify-content-center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: 'lg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: 'fullName',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    defaultValue: patient.full_name,\n    id: 'fullName',\n    placeholder: 'Type Fullname',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: 'address',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'textarea',\n    defaultValue: patient.address,\n    placeholder: 'Type Address',\n    id: 'address',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: 'telNumber',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, \"Tel Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    id: 'telNumber',\n    defaultValue: patient.tel_number,\n    required: true,\n    placeholder: 'Type Telephone Number',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: 'nic',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, \"NIC\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    id: 'nic',\n    defaultValue: patient.nic,\n    required: true,\n    placeholder: 'Type NIC',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: updateButtonHandler,\n    color: 'primary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, \"Update\"))))));\n}","map":{"version":3,"sources":["/Users/capt4inmon/Documents/hospital-management-system-fe/src/components/modals/UpdatePatient.js"],"names":["React","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","Spinner","Button","getById","updatePatient","UpdatePatient","id","useState","patient","setPatient","open","setOpen","toggle","useEffect","then","response","catch","e","console","log","updateButtonHandler","fullName","document","getElementById","value","address","telNumber","nic","_","window","location","reload","err","full_name","tel_number"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, Spinner, Button } from 'reactstrap'\nimport { getById , updatePatient } from '../../services/admin.services';\n\nexport default function UpdatePatient({ id }) {\n    const [patient, setPatient] = React.useState(null);\n    const [open, setOpen] = React.useState(false);\n    const toggle = () => setOpen(!open);\n    React.useEffect(() => {getById(3, id).then(response => setPatient(response)).catch(e => console.log(e))}, []);\n    const updateButtonHandler = () => {\n        let patient = {\n            id: id,\n            fullName: document.getElementById('fullName').value,\n            address: document.getElementById('address').value,\n            telNumber: document.getElementById('telNumber').value,\n            nic: document.getElementById('nic').value\n        }\n\n        updatePatient(patient).then(_ => window.location.reload()).catch(err => console.log(err));\n    }\n    return (\n        <>\n            <Button outline onClick={toggle} color={'danger'}>Update</Button>\n            <Modal isOpen={open} toggle={toggle}>\n                <ModalHeader>Update Patient</ModalHeader>\n                <ModalBody>\n                    {patient === null ? <div className={'d-flex justify-content-center'}>\n                        <Spinner size={'lg'} />\n                    </div> :\n                        <Form>\n                            <FormGroup>\n                                <Label for={'fullName'}>Full Name</Label>\n                                <Input type={'text'} defaultValue={patient.full_name} id={'fullName'} placeholder={'Type Fullname'} required></Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for={'address'}>Address</Label>\n                                <Input type={'textarea'} defaultValue={patient.address} placeholder={'Type Address'} id={'address'} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for={'telNumber'}>Tel Number</Label>\n                                <Input type={'text'} id={'telNumber'} defaultValue={patient.tel_number} required placeholder={'Type Telephone Number'}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for={'nic'}>NIC</Label>\n                                <Input type={'text'} id={'nic'} defaultValue={patient.nic} required placeholder={'Type NIC'}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Button onClick={updateButtonHandler} color={'primary'}>Update</Button>\n                            </FormGroup>\n                        </Form>\n                    }\n                </ModalBody>\n            </Modal>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}