{"ast":null,"code":"import _slicedToArray from \"/Users/capt4inmon/Documents/hospital-management-system-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/capt4inmon/Documents/hospital-management-system-fe/src/views/Login.js\";\nimport React from 'react';\nimport { Container, FormGroup, Input, Label, Form, Button, Row, Col, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../redux/actions/user.action';\nimport { login, validateToken } from '../services/auth.services';\nimport { withRouter } from 'react-router';\n\nconst Login = props => {\n  if (localStorage.getItem('authToken') !== null) {\n    validateToken().then(res => {\n      if (res.role === 1) window.location.replace('/admin/dashboard/1');else if (res.role === 2) {\n        window.location.replace('/login-to-patient');\n      } else if (res.role === 3) {\n        window.location.replace('/patient/my-prescriptions/1');\n      }\n    });\n  }\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        email = _React$useState2[0],\n        setEmail = _React$useState2[1];\n\n  const _React$useState3 = React.useState(null),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        password = _React$useState4[0],\n        setPassword = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        warningShow = _React$useState6[0],\n        setWarningShow = _React$useState6[1];\n\n  const userLogin = () => {\n    login(email, password).then(res => {\n      localStorage.setItem('authToken', res.token);\n      if (res.user.role === 1) window.location.replace('/admin/dashboard/1');else if (res.user.role === 2) {\n        props.history.replace('login-to-patient');\n      } else if (res.user.role === 3) props.history.replace('/patient/my-prescriptions/1');else if (res.user.role === 4) props.history.replace('get-patient-by-id');\n    }).catch(e => setWarningShow(true)).catch(e => console.log(e));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'vh-100 login-screen-bg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: 'h-100',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: 'h-100',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    className: 'align-self-center offset-md-4 bg-light',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, warningShow && /*#__PURE__*/React.createElement(Alert, {\n    color: 'primary',\n    className: 'text-center text-dark font-weight-bold mb-2',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 41\n    }\n  }, \"Wrong Email Or Password\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: 'email',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: val => setEmail(val.target.value),\n    type: 'email',\n    placeholder: 'Type Email Address',\n    id: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: 'password',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }, \"M\\u1EADt kh\\u1EA9u\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: val => setPassword(val.target.value),\n    type: 'password',\n    placeholder: 'Type Password',\n    id: \"passowrd\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: userLogin,\n    className: 'btn-round',\n    color: 'info',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, \"\\u0110\\u0103ng nh\\u1EADp\")))))));\n};\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: user => dispatch(loginUser(user))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","map":{"version":3,"sources":["/Users/capt4inmon/Documents/hospital-management-system-fe/src/views/Login.js"],"names":["React","Container","FormGroup","Input","Label","Form","Button","Row","Col","Alert","connect","loginUser","login","validateToken","withRouter","Login","props","localStorage","getItem","then","res","role","window","location","replace","useState","email","setEmail","password","setPassword","warningShow","setWarningShow","userLogin","setItem","token","user","history","catch","e","console","log","val","target","value","mapStateToProps","state","userReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Container, FormGroup, Input, Label, Form, Button, Row, Col, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../redux/actions/user.action';\nimport { login , validateToken } from '../services/auth.services';\nimport { withRouter } from 'react-router';\n\n\nconst Login = (props) => {\n    if (localStorage.getItem('authToken') !== null) {\n        validateToken().then(res => {\n            if (res.role === 1)\n                window.location.replace('/admin/dashboard/1');\n            else if (res.role === 2) {\n                window.location.replace('/login-to-patient');\n            } else if (res.role === 3) {\n                window.location.replace('/patient/my-prescriptions/1');\n            }\n        })\n    }\n    const [email, setEmail] = React.useState(null);\n    const [password, setPassword] = React.useState(null);\n    const [warningShow, setWarningShow] = React.useState(false);\n    const userLogin = () => {\n        login(email, password).then(res => {\n            localStorage.setItem('authToken', res.token);\n            if (res.user.role === 1)\n                window.location.replace('/admin/dashboard/1');\n            else if (res.user.role === 2) {\n                props.history.replace('login-to-patient');\n            } else if (res.user.role === 3)\n                props.history.replace('/patient/my-prescriptions/1');\n            else if (res.user.role === 4)\n                props.history.replace('get-patient-by-id');\n        }).catch(e => setWarningShow(true)).catch(e => console.log(e));\n    }\n    return(\n        <div className={'vh-100 login-screen-bg'}>\n            <Container fluid className={'h-100'}>\n                <Row className={'h-100'}>\n                    <Col md={4} className={'align-self-center offset-md-4 bg-light'}>\n                        {warningShow && <Alert color={'primary'} className={'text-center text-dark font-weight-bold mb-2'}>Wrong Email Or Password</Alert>}\n                        <Form>\n                            <FormGroup>\n                                <Label for={'email'}>Email</Label>\n                                <Input onChange={val=> setEmail(val.target.value)} type={'email'} placeholder={'Type Email Address'} id=\"email\" required />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for={'password'}>Mật khẩu</Label>\n                                <Input onChange={val=> setPassword(val.target.value)} type={'password'} placeholder={'Type Password'} id=\"passowrd\" required />\n                            </FormGroup>\n                            <FormGroup>\n                                <Button onClick={userLogin} className={'btn-round'} color={'info'}>Đăng nhập</Button>\n                            </FormGroup>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n};\nconst mapStateToProps = (state) => ({\n    user: state.userReducer.user\n})\n\nconst mapDispatchToProps = dispatch=> {\n    return {\n        login: user => dispatch(loginUser(user)),\n    }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Login));"]},"metadata":{},"sourceType":"module"}