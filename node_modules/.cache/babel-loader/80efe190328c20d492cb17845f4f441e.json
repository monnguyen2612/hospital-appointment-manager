{"ast":null,"code":"import _slicedToArray from \"/Users/capt4inmon/Documents/hospital-management-system-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/capt4inmon/Documents/hospital-management-system-fe/src/views/doctor/AddPrescription.js\";\nimport React from 'react';\nimport { Container, Card, CardHeader, CardBody, Row, Col, Form, FormGroup, Label, Input, CustomInput, Button, Collapse, Table } from 'reactstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { addPrescription, getPrescriptionByPatient, deletePrescription } from '../../services/doctor.services';\nimport { Link } from 'react-router-dom';\n\nfunction AddPrescription(props) {\n  const _React$useState = React.useState('https://image.flaticon.com/icons/svg/685/685686.svg'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        previewUrl = _React$useState2[0],\n        setPreviewUrl = _React$useState2[1];\n\n  const _React$useState3 = React.useState(null),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        image = _React$useState4[0],\n        setImage = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        open = _React$useState6[0],\n        isOpen = _React$useState6[1];\n\n  const _React$useState7 = React.useState([]),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        patientPrescriptionList = _React$useState8[0],\n        setPatientList = _React$useState8[1];\n\n  const fileOnchangeHandler = val => {\n    setPreviewUrl(window.URL.createObjectURL(val.target.files[0]));\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(val.target.files[0]);\n\n    fileReader.onloadend = function () {\n      setImage(fileReader.result.split(',')[1]);\n    };\n  };\n\n  const deleteButtonHandler = id => {\n    deletePrescription(id).then(_ => {\n      props.history.push('my-prescriptions');\n    }).catch(e => {\n      console.log(e.response.data.MESSAGE);\n    });\n  };\n\n  const addPrescriptionButtonHandler = () => {\n    let newPrescription = {\n      comment: document.getElementById('comment').value,\n      prescription: image,\n      patientId: props.patient.id,\n      prescriptionDetails: document.getElementById('prescriptionDetails').value\n    };\n    addPrescription(newPrescription).then(res => {\n      props.history.push('my-prescriptions');\n    }).catch(e => console.log(e.message));\n  };\n\n  const toggle = () => isOpen(!open);\n\n  React.useEffect(() => {\n    if (props.patient !== null) getPrescriptionByPatient(props.patient.id).then(response => setPatientList(response)).catch(error => console.log(error));\n  }, []);\n\n  if (props.patient !== null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'content',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: toggle,\n      color: 'secondary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"Add Prescription\"), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }\n    }, \"Add Prescription\"), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }\n    }, props.patient !== null ? props.patient.full_name : ''))), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: 'comment',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 49\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Input, {\n      type: 'textarea',\n      id: 'comment',\n      placeholder: 'Type Comment',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: 'prescriptionDetails',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 49\n      }\n    }, \"Prescription\"), /*#__PURE__*/React.createElement(Input, {\n      type: 'textarea',\n      id: 'prescriptionDetails',\n      placeholder: 'Type Prescription',\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      style: {\n        minHeight: 250\n      },\n      className: 'bg-light d-flex align-items-center justify-content-center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: 'prescription',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: previewUrl,\n      className: 'img-fluid rounded mx-auto d-block',\n      height: 200,\n      width: 200,\n      alt: 'preview',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(CustomInput, {\n      className: 'd-none',\n      onChange: fileOnchangeHandler,\n      type: \"file\",\n      id: \"prescription\",\n      name: \"prescription\",\n      label: \"Yo, pick a file!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: addPrescriptionButtonHandler,\n      color: 'secondary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 49\n      }\n    }, \"Add Prescription\")))))))), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, patientPrescriptionList.length > 0 ? /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      hover: true,\n      bordered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 45\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 45\n      }\n    }, \"Issue Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 45\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 45\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 45\n      }\n    }, \"Update\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, patientPrescriptionList.map((prescription, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 49\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 49\n      }\n    }, prescription.issued_date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 49\n      }\n    }, prescription.comment), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => deleteButtonHandler(prescription.id),\n      color: 'danger',\n      outline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 53\n      }\n    }, \"Delete\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: 'btn btn-dark btn-sm',\n      to: 'update-prescription/' + prescription.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 53\n      }\n    }, \"Update\")))))) : /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, \"There is no prescriptions added for this patient\")))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'content',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"There Is No patient\")));\n  }\n}\n\nconst mapStateToProps = state => ({\n  patient: state.doctorReducer.patient\n});\n\nexport default withRouter(connect(mapStateToProps)(AddPrescription));","map":{"version":3,"sources":["/Users/capt4inmon/Documents/hospital-management-system-fe/src/views/doctor/AddPrescription.js"],"names":["React","Container","Card","CardHeader","CardBody","Row","Col","Form","FormGroup","Label","Input","CustomInput","Button","Collapse","Table","withRouter","connect","addPrescription","getPrescriptionByPatient","deletePrescription","Link","AddPrescription","props","useState","previewUrl","setPreviewUrl","image","setImage","open","isOpen","patientPrescriptionList","setPatientList","fileOnchangeHandler","val","window","URL","createObjectURL","target","files","fileReader","FileReader","readAsDataURL","onloadend","result","split","deleteButtonHandler","id","then","_","history","push","catch","e","console","log","response","data","MESSAGE","addPrescriptionButtonHandler","newPrescription","comment","document","getElementById","value","prescription","patientId","patient","prescriptionDetails","res","message","toggle","useEffect","error","full_name","minHeight","length","map","index","issued_date","mapStateToProps","state","doctorReducer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,EAAsCC,QAAtC,EAAgDC,GAAhD,EAAqDC,GAArD,EAA0DC,IAA1D,EAAgEC,SAAhE,EAA2EC,KAA3E,EAAkFC,KAAlF,EAAyFC,WAAzF,EAAsGC,MAAtG,EAA8GC,QAA9G,EAAwHC,KAAxH,QAAqI,YAArI;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA2BC,wBAA3B,EAAsDC,kBAAtD,QAAgF,gCAAhF;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,0BACQtB,KAAK,CAACuB,QAAN,CAAe,qDAAf,CADR;AAAA;AAAA,QACrBC,UADqB;AAAA,QACTC,aADS;;AAAA,2BAEFzB,KAAK,CAACuB,QAAN,CAAe,IAAf,CAFE;AAAA;AAAA,QAErBG,KAFqB;AAAA,QAEdC,QAFc;;AAAA,2BAGL3B,KAAK,CAACuB,QAAN,CAAe,KAAf,CAHK;AAAA;AAAA,QAGrBK,IAHqB;AAAA,QAGfC,MAHe;;AAAA,2BAIsB7B,KAAK,CAACuB,QAAN,CAAe,EAAf,CAJtB;AAAA;AAAA,QAIrBO,uBAJqB;AAAA,QAIIC,cAJJ;;AAK5B,QAAMC,mBAAmB,GAAIC,GAAD,IAAS;AACjCR,IAAAA,aAAa,CAACS,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BH,GAAG,CAACI,MAAJ,CAAWC,KAAX,CAAiB,CAAjB,CAA3B,CAAD,CAAb;AACA,QAAIC,UAAU,GAAG,IAAIC,UAAJ,EAAjB;AACAD,IAAAA,UAAU,CAACE,aAAX,CAAyBR,GAAG,CAACI,MAAJ,CAAWC,KAAX,CAAiB,CAAjB,CAAzB;;AACAC,IAAAA,UAAU,CAACG,SAAX,GAAuB,YAAY;AAC/Bf,MAAAA,QAAQ,CAACY,UAAU,CAACI,MAAX,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAD,CAAR;AACH,KAFD;AAGH,GAPD;;AASA,QAAMC,mBAAmB,GAAIC,EAAD,IAAQ;AAChC3B,IAAAA,kBAAkB,CAAC2B,EAAD,CAAlB,CAAuBC,IAAvB,CAA4BC,CAAC,IAAI;AAC7B1B,MAAAA,KAAK,CAAC2B,OAAN,CAAcC,IAAd,CAAmB,kBAAnB;AACH,KAFD,EAEGC,KAFH,CAESC,CAAC,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,QAAF,CAAWC,IAAX,CAAgBC,OAA5B;AACH,KAJD;AAKH,GAND;;AAQA,QAAMC,4BAA4B,GAAG,MAAM;AACvC,QAAIC,eAAe,GAAG;AAClBC,MAAAA,OAAO,EAAEC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAD1B;AAElBC,MAAAA,YAAY,EAAEtC,KAFI;AAGlBuC,MAAAA,SAAS,EAAE3C,KAAK,CAAC4C,OAAN,CAAcpB,EAHP;AAIlBqB,MAAAA,mBAAmB,EAAEN,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CC;AAJlD,KAAtB;AAMA9C,IAAAA,eAAe,CAAC0C,eAAD,CAAf,CAAiCZ,IAAjC,CAAsCqB,GAAG,IAAI;AACzC9C,MAAAA,KAAK,CAAC2B,OAAN,CAAcC,IAAd,CAAmB,kBAAnB;AACH,KAFD,EAEGC,KAFH,CAESC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACiB,OAAd,CAFd;AAGH,GAVD;;AAWA,QAAMC,MAAM,GAAG,MAAMzC,MAAM,CAAC,CAACD,IAAF,CAA3B;;AACA5B,EAAAA,KAAK,CAACuE,SAAN,CAAgB,MAAM;AAClB,QAAIjD,KAAK,CAAC4C,OAAN,KAAkB,IAAtB,EACIhD,wBAAwB,CAACI,KAAK,CAAC4C,OAAN,CAAcpB,EAAf,CAAxB,CAA2CC,IAA3C,CAAgDQ,QAAQ,IAAIxB,cAAc,CAACwB,QAAD,CAA1E,EAAsFJ,KAAtF,CAA4FqB,KAAK,IAAInB,OAAO,CAACC,GAAR,CAAYkB,KAAZ,CAArG;AACP,GAHD,EAGG,EAHH;;AAIA,MAAIlD,KAAK,CAAC4C,OAAN,KAAkB,IAAtB,EAA4B;AACxB,wBACG;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEI,MAAjB;AAAyB,MAAA,KAAK,EAAE,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE1C,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,KAAK,CAAC4C,OAAN,KAAkB,IAAlB,GAAyB5C,KAAK,CAAC4C,OAAN,CAAcO,SAAvC,GAAmD,EADxD,CAJJ,CAFJ,CADJ,eAYI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,UAAb;AAAyB,MAAA,EAAE,EAAE,SAA7B;AAAwC,MAAA,WAAW,EAAE,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,qBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,UAAb;AAAyB,MAAA,EAAE,EAAE,qBAA7B;AAAoD,MAAA,WAAW,EAAE,mBAAjE;AAAsF,MAAA,QAAQ,MAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,eASI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAG;AAAb,OAAlB;AAAqC,MAAA,SAAS,EAAE,2DAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAElD,UAAV;AAAsB,MAAA,SAAS,EAAE,mCAAjC;AAAsE,MAAA,MAAM,EAAE,GAA9E;AAAmF,MAAA,KAAK,EAAE,GAA1F;AAA+F,MAAA,GAAG,EAAE,SAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE,QAAxB;AAAkC,MAAA,QAAQ,EAAEQ,mBAA5C;AAAiE,MAAA,IAAI,EAAC,MAAtE;AAA6E,MAAA,EAAE,EAAC,cAAhF;AAA+F,MAAA,IAAI,EAAC,cAApG;AAAmH,MAAA,KAAK,EAAC,kBAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CATJ,eAeI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE0B,4BAAjB;AAA+C,MAAA,KAAK,EAAE,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAfJ,CADJ,CADJ,CADJ,CAZJ,CADJ,CAFJ,eA0CI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK5B,uBAAuB,CAAC6C,MAAxB,GAAiC,CAAjC,gBACG,oBAAC,KAAD;AAAO,MAAA,UAAU,MAAjB;AAAkB,MAAA,KAAK,MAAvB;AAAwB,MAAA,QAAQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK7C,uBAAuB,CAAC8C,GAAxB,CAA4B,CAACZ,YAAD,EAAea,KAAf,kBACzB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,GAAG,CAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKb,YAAY,CAACc,WAAlB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKd,YAAY,CAACJ,OAAlB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAKf,mBAAmB,CAACmB,YAAY,CAAClB,EAAd,CAAzC;AAA4D,MAAA,KAAK,EAAE,QAAnE;AAA6E,MAAA,OAAO,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,qBAAjB;AAAwC,MAAA,EAAE,EAAE,yBAAuBkB,YAAY,CAAClB,EAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,CALJ,CADH,CADL,CAVJ,CADH,gBAuBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAxBR,CADJ,CA1CJ,CADL,CADH;AA6EH,GA9ED,MA8EO;AACH,wBACI;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ,CADJ;AASJ;AACH;;AAED,MAAMiC,eAAe,GAAIC,KAAD,KAAY;AAChCd,EAAAA,OAAO,EAAEc,KAAK,CAACC,aAAN,CAAoBf;AADG,CAAZ,CAAxB;;AAIA,eAAenD,UAAU,CAACC,OAAO,CAAC+D,eAAD,CAAP,CAAyB1D,eAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { Container, Card, CardHeader, CardBody, Row, Col, Form, FormGroup, Label, Input, CustomInput, Button, Collapse, Table } from 'reactstrap'\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { addPrescription , getPrescriptionByPatient , deletePrescription } from '../../services/doctor.services';\nimport { Link } from 'react-router-dom';\n\nfunction AddPrescription(props) {\n    const [previewUrl, setPreviewUrl] = React.useState('https://image.flaticon.com/icons/svg/685/685686.svg');\n    const [image, setImage] = React.useState(null);\n    const [open, isOpen] = React.useState(false);\n    const [patientPrescriptionList, setPatientList] = React.useState([]);\n    const fileOnchangeHandler = (val) => {\n        setPreviewUrl(window.URL.createObjectURL(val.target.files[0]));\n        let fileReader = new FileReader();\n        fileReader.readAsDataURL(val.target.files[0])\n        fileReader.onloadend = function () {\n            setImage(fileReader.result.split(',')[1]);\n        }\n    }\n\n    const deleteButtonHandler = (id) => {\n        deletePrescription(id).then(_ => {\n            props.history.push('my-prescriptions');\n        }).catch(e => {\n            console.log(e.response.data.MESSAGE); \n        });\n    }\n\n    const addPrescriptionButtonHandler = () => {\n        let newPrescription = {\n            comment: document.getElementById('comment').value,\n            prescription: image,\n            patientId: props.patient.id,\n            prescriptionDetails: document.getElementById('prescriptionDetails').value,\n        }\n        addPrescription(newPrescription).then(res => {\n            props.history.push('my-prescriptions');\n        }).catch(e => console.log(e.message));\n    }\n    const toggle = () => isOpen(!open);\n    React.useEffect(() => { \n        if (props.patient !== null)\n            getPrescriptionByPatient(props.patient.id).then(response => setPatientList(response)).catch(error => console.log(error));\n    }, []);\n    if (props.patient !== null) {\n        return (\n           <div className={'content'}>\n                <Container>\n                    <Button onClick={toggle} color={'secondary'}>Add Prescription</Button>\n                    <Collapse isOpen={open}>\n                        <Card>\n                            <CardHeader>\n\n                                <Row>\n                                    <Col md={6}>\n                                        Add Prescription\n                                    </Col>\n                                    <Col md={6}>\n                                        {props.patient !== null ? props.patient.full_name : ''}\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            <CardBody>\n                                <Row>\n                                    <Col md={12}>\n                                        <Form>\n                                            <FormGroup>\n                                                <Label for={'comment'}>Comment</Label>\n                                                <Input type={'textarea'} id={'comment'} placeholder={'Type Comment'}/>\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Label for={'prescriptionDetails'}>Prescription</Label>\n                                                <Input type={'textarea'} id={'prescriptionDetails'} placeholder={'Type Prescription'} required/>\n                                            </FormGroup>\n                                            <FormGroup style={{minHeight : 250}} className={'bg-light d-flex align-items-center justify-content-center'}>\n                                                <Label for={'prescription'}>\n                                                    <img src={previewUrl} className={'img-fluid rounded mx-auto d-block'} height={200} width={200} alt={'preview'}/>\n                                                </Label>\n                                                <CustomInput className={'d-none'} onChange={fileOnchangeHandler} type=\"file\" id=\"prescription\" name=\"prescription\" label=\"Yo, pick a file!\" />\n                                            </FormGroup>\n                                            <FormGroup>\n                                                <Button onClick={addPrescriptionButtonHandler} color={'secondary'}>Add Prescription</Button>\n                                            </FormGroup>\n                                        </Form>\n                                    </Col>\n                                </Row>\n                            </CardBody>\n                        </Card>\n                    </Collapse>\n                    <Card>\n                        <CardBody>\n                            {patientPrescriptionList.length > 0 ?\n                                <Table responsive hover bordered>\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th>Issue Date</th>\n                                            <th>Comment</th>\n                                            <th>Delete</th>\n                                            <th>Update</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {patientPrescriptionList.map((prescription, index) => (\n                                            <tr key={index}>\n                                                <td>{index + 1}</td>\n                                                <td>{prescription.issued_date}</td>\n                                                <td>{prescription.comment}</td>\n                                                <td><Button onClick={()=> deleteButtonHandler(prescription.id)} color={'danger'} outline>Delete</Button></td>\n                                                <td><Link className={'btn btn-dark btn-sm'} to={'update-prescription/'+prescription.id}>Update</Link></td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </Table> :\n                                <h4>There is no prescriptions added for this patient</h4>\n                            \n                            }\n                        </CardBody>\n                    </Card>\n               </Container>\n           </div>\n    )\n    } else {\n        return (\n            <div className={'content'}>\n                <Container>\n                    <h1>\n                        There Is No patient\n                    </h1>\n                </Container>\n            </div>\n        );\n   }\n}\n\nconst mapStateToProps = (state) => ({\n    patient: state.doctorReducer.patient,\n});\n\nexport default withRouter(connect(mapStateToProps)(AddPrescription));"]},"metadata":{},"sourceType":"module"}