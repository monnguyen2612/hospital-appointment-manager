{"ast":null,"code":"var _jsxFileName = \"/Users/capt4inmon/Documents/hospital-management-system-fe/src/views/Icons.jsx\";\nimport React from \"react\"; // reactstrap components\n\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col, Table, Spinner, Button, Alert } from \"reactstrap\";\nimport { fetchPatients as _fetchPatients } from '../redux/actions/admin.action';\nimport { connect } from \"react-redux\";\nimport { getAllPatients, deleteUser } from '../services/admin.services';\nimport { Link } from \"react-router-dom\";\nimport PagesDropdown from \"components/util/PagesDropdown\";\nimport UpdatePatient from \"components/modals/UpdatePatient\";\n\nclass Icons extends React.Component {\n  constructor(props) {\n    super(props); // if (localStorage.getItem('authToken') === null)\n    //   window.location.replace('/');\n\n    this.state = {\n      toggle: false,\n      error: null\n    };\n\n    this.deleteButtonHandler = patientId => {\n      deleteUser(patientId, 3).then(_ => window.location.reload()).catch(e => this.setState({\n        error: e.message\n      }));\n    };\n\n    this.toggle = () => {\n      this.setState({\n        toggle: !this.state.toggle\n      });\n    };\n  }\n\n  componentDidMount() {\n    getAllPatients(this.props.match.params.pageNo).then(jsonResponse => {\n      this.props.fetchPatients(jsonResponse);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, this.state.error !== null && /*#__PURE__*/React.createElement(Alert, {\n      color: 'info',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 43\n      }\n    }, this.state.error), /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PagesDropdown, {\n      size: this.props.pages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/admin/new-patient',\n      className: 'btn btn-dark',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, \"Add New patient\"))), /*#__PURE__*/React.createElement(Card, {\n      className: \"demo-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      tag: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, \"Patients\")), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"all-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, this.props.patientList === undefined || this.props.patientList.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: 'd-flex justify-content-center w-100',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 98\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      size: 'lg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 153\n      }\n    })) : /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 27\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 27\n      }\n    }, \"NIC\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 27\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 27\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }\n    }, \"DOB\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }\n    }, \"Tel Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 27\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }\n    }, \"Update\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }\n    }, this.props.patientList.map(patient => /*#__PURE__*/React.createElement(\"tr\", {\n      key: patient.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, patient.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, patient.full_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, patient.nic), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, patient.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, patient.gender), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, patient.dob), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, patient.tel_number), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, patient.address), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.deleteButtonHandler(patient.id),\n      type: 'button',\n      color: 'info',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, \"Delete\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(UpdatePatient, {\n      id: patient.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }))))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  patientList: state.adminReducer.patientList,\n  pages: state.adminReducer.patientPages\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPatients: patientResponse => dispatch(_fetchPatients(patientResponse))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Icons);","map":{"version":3,"sources":["/Users/capt4inmon/Documents/hospital-management-system-fe/src/views/Icons.jsx"],"names":["React","Card","CardHeader","CardBody","CardTitle","Row","Col","Table","Spinner","Button","Alert","fetchPatients","connect","getAllPatients","deleteUser","Link","PagesDropdown","UpdatePatient","Icons","Component","constructor","props","state","toggle","error","deleteButtonHandler","patientId","then","_","window","location","reload","catch","e","setState","message","componentDidMount","match","params","pageNo","jsonResponse","console","log","render","pages","patientList","undefined","length","map","patient","id","full_name","nic","email","gender","dob","tel_number","address","mapStateToProps","adminReducer","patientPages","mapDispatchToProps","dispatch","patientResponse"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col, Table, Spinner, Button, Alert } from \"reactstrap\";\nimport { fetchPatients } from '../redux/actions/admin.action';\nimport { connect } from \"react-redux\";\nimport { getAllPatients , deleteUser } from '../services/admin.services';\nimport { Link } from \"react-router-dom\";\nimport PagesDropdown from \"components/util/PagesDropdown\";\nimport UpdatePatient from \"components/modals/UpdatePatient\";\nclass Icons extends React.Component {\n  state = {\n    toggle: false,\n    error : null\n  }\n  constructor(props) {\n    super(props);\n    // if (localStorage.getItem('authToken') === null)\n    //   window.location.replace('/');\n  }\n  \n  componentDidMount() {\n    getAllPatients(this.props.match.params.pageNo).then(jsonResponse => {\n      this.props.fetchPatients(jsonResponse);\n    }).catch(e => {\n      console.log(e);\n    })\n  }\n\n  deleteButtonHandler = (patientId) => {\n    deleteUser(patientId,3).then(_ => window.location.reload()).catch(e => this.setState({ error: e.message }));\n  }\n\n  toggle = () => {\n    this.setState({\n      toggle: !this.state.toggle\n    });\n  }\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            {this.state.error !== null && <Alert color={'info'}>{this.state.error}</Alert>}\n            <Col md=\"12\">\n              <Row>\n                <Col md={6}>\n                  <PagesDropdown size={this.props.pages}/>\n                </Col>\n                <Col md={6}>\n                  <Link to={'/admin/new-patient'} className={'btn btn-dark'}>Add New patient</Link>\n                </Col>\n              </Row>\n              <Card className=\"demo-icons\">\n                <CardHeader>\n                  <CardTitle tag=\"h5\">Patients</CardTitle>\n                </CardHeader>\n                <CardBody className=\"all-icons\">\n                  {this.props.patientList === undefined || this.props.patientList.length === 0 ? <div className={'d-flex justify-content-center w-100'}><Spinner size={'lg'} /></div> :\n                    <Table responsive hover>\n                      <thead>\n                        <tr>\n                          <th>ID</th>\n                          <th>Name</th>\n                          <th>NIC</th>\n                          <th>Email</th>\n                          <th>Gender</th>\n                          <th>DOB</th>\n                          <th>Tel Number</th>\n                          <th>Address</th>\n                          <th>Delete</th>\n                          <th>Update</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.props.patientList.map(patient => (\n                          <tr key={patient.id}>\n                            <td>{patient.id}</td>\n                            <td>{patient.full_name}</td>\n                            <td>{patient.nic}</td>\n                            <td>{patient.email}</td>\n                            <td>{patient.gender}</td>\n                            <td>{patient.dob}</td>\n                            <td>{patient.tel_number}</td>\n                            <td>{patient.address}</td>\n                            <td><Button onClick={() => this.deleteButtonHandler(patient.id)} type={'button'} color={'info'}>Delete</Button></td>\n                            <td><UpdatePatient id={patient.id}/></td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </Table>\n                  }\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  patientList: state.adminReducer.patientList,\n  pages: state.adminReducer.patientPages\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPatients : patientResponse=>dispatch(fetchPatients(patientResponse))\n})\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Icons);\n"]},"metadata":{},"sourceType":"module"}