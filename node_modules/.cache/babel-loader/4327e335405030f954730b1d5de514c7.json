{"ast":null,"code":"import _regeneratorRuntime from \"/Users/capt4inmon/Documents/hospital-management-system-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/capt4inmon/Documents/hospital-management-system-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BASE_URL } from '../variables/values';\nimport axios from 'axios';\nexport function login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", fetch(\"\".concat(BASE_URL, \"auth/login\"), {\n            method: 'POST',\n            body: JSON.stringify({\n              password: password,\n              email: email\n            }),\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n          }).then(response => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Wrong Email Or Password');\n            }\n          }).catch(e => {\n            throw e;\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _login.apply(this, arguments);\n}\n\nexport function validateToken() {\n  return axios.post(\"\".concat(BASE_URL, \"auth/validate-token\"), '', {\n    headers: {\n      'Authorization': \"Bearer \".concat(localStorage.getItem('authToken'))\n    }\n  }).then(response => response.data).catch(e => {\n    localStorage.removeItem('authToken');\n    throw e;\n  });\n}","map":{"version":3,"sources":["/Users/capt4inmon/Documents/hospital-management-system-fe/src/services/auth.services.js"],"names":["BASE_URL","axios","login","email","password","fetch","method","body","JSON","stringify","headers","then","response","ok","json","Error","catch","e","validateToken","post","localStorage","getItem","data","removeItem"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,gBAAsBC,KAAtB;AAAA;AAAA;;;oEAAO,iBAAqBC,KAArB,EAA4BC,QAA5B;AAAA;AAAA;AAAA;AAAA,2CACIC,KAAK,WAAIL,QAAJ,iBAA0B;AAClCM,YAAAA,MAAM,EAAE,MAD0B;AAElCC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBL,cAAAA,QAAQ,EAAEA,QADO;AAEjBD,cAAAA,KAAK,EAAGA;AAFS,aAAf,CAF4B;AAMlCO,YAAAA,OAAO,EAAE;AACL,8BAAgB,kBADX;AAEL,wBAAS;AAFJ;AANyB,WAA1B,CAAL,CAUJC,IAVI,CAUCC,QAAQ,IAAI;AAChB,gBAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,qBAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,aAFD,MAEO;AACH,oBAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACH;AACJ,WAhBM,EAgBJC,KAhBI,CAgBEC,CAAC,IAAG;AAAC,kBAAMA,CAAN;AAAQ,WAhBf,CADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmBP,OAAO,SAASC,aAAT,GAAyB;AAC5B,SAAOjB,KAAK,CAACkB,IAAN,WAAcnB,QAAd,0BAA6C,EAA7C,EAAiD;AACpDU,IAAAA,OAAO,EAAE;AACL,wCAA2BU,YAAY,CAACC,OAAb,CAAqB,WAArB,CAA3B;AADK;AAD2C,GAAjD,EAIJV,IAJI,CAICC,QAAQ,IAAIA,QAAQ,CAACU,IAJtB,EAI4BN,KAJ5B,CAIkCC,CAAC,IAAI;AAC1CG,IAAAA,YAAY,CAACG,UAAb,CAAwB,WAAxB;AACA,UAAMN,CAAN;AACH,GAPM,CAAP;AAQH","sourcesContent":["import { BASE_URL } from '../variables/values';\nimport axios from 'axios';\nexport async function login(email, password) {\n    return fetch(`${BASE_URL}auth/login`, {\n        method: 'POST',\n        body: JSON.stringify({\n            password: password,\n            email : email\n        }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept':'application/json'\n        }\n    }).then(response => {\n        if (response.ok) {\n            return response.json();\n        } else {\n            throw new Error('Wrong Email Or Password');\n        }\n    }).catch(e=> {throw e});\n}\nexport function validateToken() {\n    return axios.post(`${BASE_URL}auth/validate-token`, '', {\n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n    }).then(response => response.data).catch(e => {\n        localStorage.removeItem('authToken');\n        throw e;\n    });\n}"]},"metadata":{},"sourceType":"module"}